# TODO convert to website
# DONE convert to own project (use rails and react)
# TODO do some system design to make look ups easier and faster (archatypes)
# Support number of cards in deck (default to 40)
#   have a min number of cards needed to be an archetype (5?), and if less then that, then go through previous archetypes and add 1 more card
# TODO have support for archetypes
#   Idea, get some number of archetypes (1-5 or configerable?), and then do random amounts from 1-3 of cards
#   Doesn't have to have the same amount of cards per archetype
# TODO configure monsters / spell / trap numbers
# TODO be able to select which archetypes to select from
# TODO be able to export decklist (do reasearch on if there's a common format, or what that looks like)
# TODO support OCG
# TODO respect ban list
# TODO support extra deck
# TODO get an extra deck monsters from archetype (proportionally)
# TODO actually get an extra deck monster that is possible to summon from archetype?
# TODO configure extra deck by type? (filter archetypes based on?, maybe select extra deck cards first)
# TODO be able to limit based on master duel rarity? Probs not
# DONE favor either 40 or 60 cards (lets say 50% 40, 33.3% 60, 16.6% between).
# TODO support generating multiple copies of a card (think about percentages).

# DONE convert to use https://ygoprodeck.com/api-guide/

# DONE convert basic deck generation to use cart arts instead of cards
# TODO add side decks (need to ensure that you don't go over per card limit)

Generate options
# TODO basic generate options using yes no for different card types
# TODO support specifying specific numbers of different card types
# TODO support specifying ranges of numbers of different card types
    # make omega query, get just ids, frame_type, and card_art_ids,
    # select and remove mins from list
    # randomly select from already selected - total max
    # take that amount from list??

# TODO support specifying certain attributes and stuff (atk, etc) on cards


DB stuff
# TODO add archetype table
# TODO add banlist table
# TODO add banlist format table?
# TODO add images table? need to figure out that part
# TODO add enums for type, frame_type, race, attribute
# DONE put skill cards into their own table (reverted)
# DONE remove token cards
# DONE handle different art works (store in join table?) (store in array?) (move cards into by art work (multiple arts == multiple cards))
# DONE move cart art into own join table, specific with card. so that deck can link to card art. CardArt art should only have small_url, full_url, and card_id ref
# TODO ideally I can inline the card data in the json

Front End
# DONE (Basic) have a page for viewing a generated deck
#   TODO improve UI
# TODO have a page for generating a deck
#   TODO all the filters and such
# TODO have an easy way to share decks (as images)
# TODO link to wiki or something for more card details?

# EXTRA
# TODO have an admin page to kick up job updates
# TODO have a progress page to view current status of new cards (channel + websocket?)
# TODO have a cancel button for canceling job
# TODO graceful cancel by using a channel or something
# DONE convert puts to logs
# DONE make a local server to "download" images from
# TODO add a generate again button
